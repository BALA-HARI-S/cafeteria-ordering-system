version: '3.8'

services:
    cos-db:
        image: postgres:14-alpine
        container_name: cos-db
        ports:
            - "5432:5432"
        healthcheck:
            test: [ "CMD", "pg_isready" ]
            interval: 10s
            timeout: 7s
            start_period: 2s
            retries: 3
        env_file: .env.docker-compose.development
        environment:
            POSTGRES_USER: cos_usr
            POSTGRES_PASSWORD: P@ssw0rd
            POSTGRES_DB: cos
        volumes:
            - cos-db-data:/var/lib/postgresql/data
        restart: no
        networks:
            - cos

    pgadmin:
        container_name: pgadmin4
        image: dpage/pgadmin4:7
        ports:
            - "5050:80"
        healthcheck:
            test: [ "CMD", "ping localhost:80 || exit 1" ]
            interval: 10s
            timeout: 7s
            start_period: 160s
            retries: 3
        env_file: .env.docker-compose.development
        depends_on:
            cos-db:
                condition: service_healthy
        restart: no
        networks:
            - cos

volumes:
    cos-db-data:

networks:
    cos:

# Docker Compose commands
# Build database and pull image
#   1. docker compose -f backend/api-app/docker-compose.yml pull cadence-restful-api-server
#   2. docker compose -f backend/api-app/docker-compose.yml build cadence-restful-api-database
# Start and Stop application with dependencies
#   1. docker compose -f backend/api-app/docker-compose.yml up
#   2. docker compose -f backend/api-app/docker-compose.yml down
